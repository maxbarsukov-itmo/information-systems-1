services:
  app:
    container_name: app
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_PORT=$POSTGRES_PORT
      - JWT_SECRET=$JWT_SECRET
      - JWT_EXPIRATION=$JWT_EXPIRATION
      - MINIO_HOST=$MINIO_HOST
      - MINIO_BUCKET_NAME=MINIO_BUCKET_NAME
      - MINIO_ROOT_USER=$MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD
      - MINIO_API_PORT=$MINIO_API_PORT
      - MINIO_CONSOLE_PORT=$MINIO_CONSOLE_PORT
    ports:
      - "8080:8080"
    networks:
      - app-network

  postgres:
    env_file: .env
    image: postgres:14.2
    restart: unless-stopped
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-network
    volumes:
      - database_data:/var/lib/postgresql/data

  minio:
    env_file: .env
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    networks:
      - app-network
    volumes:
      - minio_storage:/data

volumes:
  minio_storage: { }
  database_data:
    driver: local

networks:
  app-network:
    driver: bridge
